{"version":3,"sources":["components/EmployeeRow/EmployeeRow.js","utils/API.js","components/Employees/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeRow","props","scope","src","employee","picture","thumbnail","name","first","phone","email","dob","date","axios","get","Employees","className","onClick","handleSortImage","handleSortName","handleSortPhone","handleSortEmail","handleSortDob","employees","map","id","value","App","handleInputChange","event","target","setState","handleFormSubmit","preventDefault","handleFilter","state","search","results","tempResults","bind","API","then","res","console","log","data","catch","err","result","this","filter","includes","sort","a","b","last","age","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f1c5d7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst EmployeeRow = (props) => {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">\r\n        <img src={props.employee.picture.thumbnail} />\r\n      </th>\r\n      <td>{props.employee.name.first}</td>\r\n      <th>{props.employee.phone}</th>\r\n      <td>{props.employee.email}</td>\r\n      <td>{props.employee.dob.date}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EmployeeRow;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    search: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport EmployeeRow from \"../EmployeeRow/EmployeeRow\";\r\nimport API from \"../../utils/API\";\r\n\r\nconst Employees = (props) => {\r\n  // state = {\r\n  //   items: [\r\n  //     {\r\n  //       id: 1,\r\n  //       name: \"Garlic Salt\",\r\n  //     },\r\n  //     {\r\n  //       id: 2,\r\n  //       name: \"Macaroni\",\r\n  //     },\r\n  //     {\r\n  //       id: 3,\r\n  //       name: \"Canned Fish\",\r\n  //     },\r\n  //   ],\r\n  //   newItem: \"\",\r\n  // };\r\n\r\n  // handleInputChange = (e) => {\r\n  //   const { name, value } = e.target;\r\n\r\n  //   // console.log(value);\r\n\r\n  //   this.setState({\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n\r\n  // handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   const newItem = {\r\n  //     id: this.state.items.length + 1,\r\n  //     name: this.state.newItem,\r\n  //   };\r\n\r\n  //   // console.log(newItem);\r\n\r\n  //   const itemsArray = [...this.state.items];\r\n  //   // console.log(itemsArray);\r\n\r\n  //   itemsArray.push(newItem);\r\n\r\n  //   // console.log(itemsArray);\r\n\r\n  //   this.setState({\r\n  //     items: itemsArray,\r\n  //     newItem: \"\",\r\n  //   });\r\n  // };\r\n\r\n  // render() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th name=\"image\" onClick={props.handleSortImage} scope=\"col\">\r\n                  Image\r\n                </th>\r\n                <th onClick={props.handleSortName} scope=\"col\">\r\n                  Name\r\n                </th>\r\n                <th onClick={props.handleSortPhone} scope=\"col\">\r\n                  Phone\r\n                </th>\r\n                <th onClick={props.handleSortEmail} scope=\"col\">\r\n                  Email\r\n                </th>\r\n                <th onClick={props.handleSortDob} scope=\"col\">\r\n                  DOB\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.employees.map((employee) => (\r\n                <EmployeeRow employee={employee} key={employee.id.value} />\r\n                // <tr>HelloSir</tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"row\">\r\n            {/* <form onSubmit={this.handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"item\" className=\"form-label\">\r\n                    Add new label to your pantry\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"item\"\r\n                    value={this.state.newItem}\r\n                    name=\"newItem\"\r\n                    onChange={this.handleInputChange}\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </form> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  // }\r\n};\r\n\r\nexport default Employees;\r\n","import { Component } from \"react\";\nimport Employees from \"./components/Employees/Employees\";\nimport API from \"./utils/API\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      results: [],\n      tempResults: [],\n      search: \"\",\n    };\n    this.handleSortImage = this.handleSortImage.bind(this);\n    this.handleSortName = this.handleSortName.bind(this);\n    this.handleSortPhone = this.handleSortPhone.bind(this);\n    this.handleSortEmail = this.handleSortEmail.bind(this);\n    this.handleSortDob = this.handleSortDob.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  componentDidMount() {\n    API.search()\n      .then((res) => {\n        console.log(this);\n        console.log(\"in promise: \", res.data.results);\n        this.setState({\n          results: res.data.results,\n          tempResults: res.data.results,\n        });\n        // this.handleFilter();\n      })\n      .catch((err) => console.log(err));\n    // console.log(\"tempResults!: \", this.state.tempResults);\n    // console.log(\"results!: \", this.state.tempResults);\n\n    // this.searchEmployee();\n  }\n\n  handleFilter(name) {\n    // console.log(\"tempResults!: \", this.state.tempResults);\n    // console.log(\"results!: \", this.state.tempResults);\n    // this.setState({ results: this.state.tempResults });\n    const result = this.state.results.filter((employee) =>\n      employee.name.first.includes(name)\n    );\n\n    this.setState({ results: result });\n  }\n\n  handleSortImage() {\n    console.log(`Image!: `, this);\n    const result = this.state.results;\n\n    result.sort((a, b) => {\n      // return b.dob.age > a.dob.age ? 1 : -1;\n      var imgOne = a.picture.thumbnail;\n      var imgTwo = b.picture.thumbnail;\n      if (imgOne < imgTwo) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    this.setState({ results: result });\n  }\n  handleSortName() {\n    console.log(`Name!: `, this);\n    const result = this.state.results;\n\n    result.sort((a, b) => {\n      var numOne = a.name.last;\n      var numTwo = b.name.last;\n      if (numOne < numTwo) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    this.setState({ results: result });\n  }\n  handleSortPhone() {\n    console.log(`Phone!: `, this);\n    const result = this.state.results;\n\n    result.sort((a, b) => {\n      var numOne = a.name.last;\n      var numTwo = b.name.last;\n      if (numOne < numTwo) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    this.setState({ results: result });\n  }\n\n  handleSortEmail() {\n    console.log(`Email!: `, this);\n    const result = this.state.results;\n\n    result.sort((a, b) => {\n      var emailOne = a.email;\n      var emailTwo = b.email;\n      if (emailOne < emailTwo) {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n\n    this.setState({ results: result });\n  }\n\n  handleSortDob() {\n    console.log(`Dob!: `, this);\n    const result = this.state.results;\n\n    result.sort((a, b) => {\n      return b.dob.age - a.dob.age;\n    });\n\n    this.setState({ results: result });\n  }\n\n  // searchEmployee() {\n  //   API.search()\n  //     .then((res) => {\n  //       console.log(this);\n  //       console.log(\"in promise: \", res.data.results);\n  //       this.setState({ results: res.data.results });\n  //       // this.handleFilter();\n  //     })\n  //     .catch((err) => console.log(err));\n  //   // console.log(this.state.results);\n  // }\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.handleFilter(this.state.search);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row p-5 text-center bg-dark\">\n          <div className=\"col text-white\">\n            <h1>Employee Directory</h1>\n            <p className=\"mt-3\">Click on carrots to filter by heading or use the search box to narrow your results.</p>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col p-2 text-center\">\n            <input\n              onChange={this.handleInputChange}\n              name=\"search\"\n              value={this.state.search}\n            />\n            <button\n              className=\"btn btn-primary\"\n              onClick={this.handleFormSubmit}\n            >\n              Filter\n            </button>\n            <Employees\n              handleSortImage={this.handleSortImage}\n              handleSortName={this.handleSortName}\n              handleSortPhone={this.handleSortPhone}\n              handleSortEmail={this.handleSortEmail}\n              handleSortDob={this.handleSortDob}\n              employees={this.state.results}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}